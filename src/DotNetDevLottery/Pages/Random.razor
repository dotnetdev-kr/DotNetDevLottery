@page "/random"
@inject NavigationManager NavigationManager
@inject IEventService EventService

<div class="button-row">
    <ui-button
        treatment="outline"
        @onclick="onClickButton"
        class="success">
        추첨 진행
    </ui-button>
</div>
<h2 class="text-row">@personCount 명 중에 당첨자에요!</h2>
<div class="person-text-row">@selectedUserInfo?.personName</div>
<div class="sub-text-row">@selectedUserInfo?.phone</div>
<div class="sub-text-row">@selectedUserInfo?.email</div>
<ui-divider />
<div class="person-list">
    @foreach (var info in remainedUserList)
    {
        <h3 class="person">@info.personName</h3>
    }
</div>
@code {
    List<UserInfo> remainedUserList = new List<UserInfo>();
    UserInfo? selectedUserInfo;
    int personCount = 0;

    protected override Task OnInitializedAsync()
    {
        remainedUserList = EventService.UserInfos.ToList();
        personCount = remainedUserList.Count;

        if (remainedUserList.Count == 0)
        {
            NavigationManager.NavigateTo("/");
            return Task.CompletedTask;
        }

        return Task.CompletedTask;
    }

    public void onClickButton()
    {
        if (remainedUserList.Count < 1)
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        var randomObj = new System.Random();
        var index = randomObj.Next(remainedUserList.Count);
        selectedUserInfo = remainedUserList.ElementAtOrDefault(index);

        if (selectedUserInfo != null)
            remainedUserList = remainedUserList.Where(info => info.personName != selectedUserInfo.personName).ToList();
        else
        {
            NavigationManager.NavigateTo("/");
            return;
        }
    }
}
